// generated by Fast Light User Interface Designer (fluid) version 1.0302

#include "tuto05.h"
#include "header.c"
#include "func.c"

Fl_Button *button01=(Fl_Button *)0;

static void cb_button01(Fl_Button*, void*) {
  printf( "Button01 CLICKED \n" );

 input01->label("Label Changed!");
}

Fl_Input *input01=(Fl_Input *)0;

Fl_Button *button02=(Fl_Button *)0;

static void cb_button02(Fl_Button*, void*) {
  printf( "Button02 CLICKED \n" );

 input01->value("Text Changed!");
}

Fl_Button *button03=(Fl_Button *)0;

static void cb_button03(Fl_Button*, void*) {
  if ( strcmp( input01->value() , "" ) != 0 )
   {
      printf( "Value Item is not null\n" );
      printf( "Value Item: %s\n" , input01->value() );
   }
   else 
   printf( "Value Item is null\n" );

   
      
      //char strpassed[PATH_MAX];
      //strncpy( strpassed, iw->value() , PATH_MAX );
}

Fl_Button *button04=(Fl_Button *)0;

static void cb_button04(Fl_Button*, void*) {
  printf( "Clear inputbox text \n" );

 input01->value( "" );
}

Fl_Double_Window* make_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(655, 265);
    w = o;
    { button01 = new Fl_Button(105, 25, 155, 40, "Set Inputbox Label");
      button01->callback((Fl_Callback*)cb_button01);
    } // Fl_Button* button01
    { input01 = new Fl_Input(190, 196, 95, 34, "input line");
      input01->tooltip("Tooltip Input Text");
    } // Fl_Input* input01
    { button02 = new Fl_Button(270, 25, 165, 40, "Set inputbox Text");
      button02->callback((Fl_Callback*)cb_button02);
    } // Fl_Button* button02
    { button03 = new Fl_Button(105, 75, 155, 40, "Verify Content");
      button03->callback((Fl_Callback*)cb_button03);
    } // Fl_Button* button03
    { button04 = new Fl_Button(270, 75, 165, 40, "Clear inputbox Text");
      button04->callback((Fl_Callback*)cb_button04);
      Fl_Group::current()->resizable(button04);
    } // Fl_Button* button04
    o->end();
  } // Fl_Double_Window* o
  w->show();
  return w;
}

int main() {
  printf("Hello, World!\n");
   make_window(); Fl::run();
    return 0;
}
